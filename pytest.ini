[pytest]
minversion = 6.0
# Explicitly list plugins - may help with loading order/recognition
# plugins =
#     pytest_httpx
#     pytest_asyncio
#     pytest_dotenv

# Use default pytest discovery patterns (recursive)
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
pythonpath = . backend

# Add pytest-dotenv specific config if needed, e.g. to load a specific .env.test
dotenv_files =
    .env.test
# Example: dotenv_override_run_commands = true (if using run commands with dotenv)

# Configure asyncio mode (requires pytest-asyncio)
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Explicitly tell pytest-httpx where to find the app
# httpx_async_app = conftest:app # Point to the 'app' fixture in conftest.py

# Add custom markers if needed
# markers =
#     slow: marks tests as slow to run
#     integration: marks integration tests

# Set log level for tests
log_cli = true
log_cli_level = WARNING
# log_file_level = DEBUG
# log_file = tests.log # Log file will be created in root

# Add command line options here
# Using -vs for verbose output and showing locals in tracebacks
# Using --log-cli-level=WARNING to reduce noise, logs still go to file if configured
addopts = -vs -p no:httpx

# Specify test paths
testpaths = tests

# Silence warnings that cannot be fixed directly in test code
filterwarnings =
    ignore::DeprecationWarning:fastapi.applications
    ignore::DeprecationWarning:backend.app.main
    ignore:Please use `import python_multipart` instead:PendingDeprecationWarning:starlette.formparsers
    ignore:builtin type SwigPyPacked has no __module__ attribute:DeprecationWarning
    ignore:builtin type SwigPyObject has no __module__ attribute:DeprecationWarning
    ignore:builtin type swigvarlink has no __module__ attribute:DeprecationWarning 